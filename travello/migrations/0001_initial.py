# Generated by Django 3.0.6 on 2020-09-19 04:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contactme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=60)),
                ('mobile', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('date_reg1', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('img', models.ImageField(default='profile1.png', upload_to='pics')),
                ('desc', models.TextField()),
                ('price', models.IntegerField()),
                ('offer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=60)),
                ('mobile', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Resigned', 'Resigned'), ('Working', 'Working'), ('Temporary', 'Temporary'), ('OnContract', 'OnContract')], max_length=200, null=True)),
                ('note', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=60)),
                ('mobile', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Resigned', 'Resigned'), ('Working', 'Working'), ('Temporary', 'Temporary'), ('OnContract', 'OnContract')], max_length=200, null=True)),
                ('note', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Feasable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50)),
                ('building', models.CharField(max_length=50)),
                ('area', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=50)),
                ('chairman', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('flats', models.IntegerField(default=6, null=True)),
                ('oltip', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', embed_video.fields.EmbedVideoField()),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('img', models.ImageField(default='profile1.png', upload_to='pics')),
                ('desc', models.TextField()),
                ('tempelate', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Delivered', 'Delivered'), ('Pending', 'Pending'), ('Out for delivery', 'Out for delivery')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('benefits', models.CharField(max_length=150)),
                ('validity', models.CharField(max_length=150)),
                ('speedlimit', models.CharField(default=100, max_length=150, null=True)),
                ('days', models.IntegerField(default=28, null=True)),
                ('value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Referal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myname', models.CharField(max_length=50)),
                ('mymobile', models.CharField(max_length=20)),
                ('referalname', models.CharField(max_length=50)),
                ('referalmobile', models.CharField(max_length=20)),
                ('referalemail', models.EmailField(max_length=60)),
                ('referaladdress', models.TextField()),
                ('message', models.TextField()),
                ('category', models.CharField(max_length=25)),
                ('contacttime', models.CharField(max_length=30)),
                ('date_reg1', models.DateTimeField(auto_now_add=True, verbose_name='date_reg1')),
            ],
        ),
        migrations.CreateModel(
            name='Salesfaq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=25)),
                ('serial', models.IntegerField()),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=60)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('user1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newcustomer9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField()),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('lastname', models.CharField(max_length=200, null=True)),
                ('uesrname', models.CharField(max_length=200, null=True)),
                ('mobileno', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=60, null=True)),
                ('adharcardno', models.CharField(max_length=20, null=True)),
                ('adharcard', models.ImageField(default='profile1.png', upload_to='pics')),
                ('panno', models.CharField(max_length=20, null=True)),
                ('pan', models.ImageField(default='profile1.png', upload_to='pics')),
                ('drivinglicenceno', models.CharField(max_length=20, null=True)),
                ('drivinglicence', models.ImageField(default='profile1.png', upload_to='pics')),
                ('electricityno', models.CharField(max_length=20, null=True)),
                ('electricitybill', models.ImageField(default='profile1.png', upload_to='pics')),
                ('active', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_id', models.IntegerField(null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newcustomer2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField()),
                ('username', models.CharField(max_length=200, null=True)),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('lastname', models.CharField(max_length=200, null=True)),
                ('uesrname', models.CharField(max_length=200, null=True)),
                ('mobileno', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=60)),
                ('adharcardno', models.CharField(max_length=20)),
                ('adharcard', models.ImageField(default='profile1.png', upload_to='pics')),
                ('panno', models.CharField(max_length=20)),
                ('pan', models.ImageField(default='profile1.png', upload_to='pics')),
                ('drivinglicenceno', models.CharField(max_length=20)),
                ('drivinglicence', models.ImageField(default='profile1.png', upload_to='pics')),
                ('electricityno', models.CharField(max_length=20)),
                ('electricitybill', models.ImageField(default='profile1.png', upload_to='pics')),
                ('active', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_id', models.IntegerField(null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newcustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(default='Pune', max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('fathername', models.CharField(max_length=200, null=True)),
                ('lastname', models.CharField(choices=[('MS', 'MS'), ('MISS', 'MISS'), ('MR', 'MR'), ('DR', 'DR')], max_length=200, null=True)),
                ('dob', models.DateTimeField(blank=True, null=True)),
                ('nationality', models.CharField(default='India', max_length=20, null=True)),
                ('gender', models.CharField(choices=[('Female', 'Female'), ('Other', 'Other'), ('Male', 'Male')], max_length=20, null=True)),
                ('customertype', models.CharField(choices=[('Corporate', 'Corporate'), ('Individual', 'Individual')], default='Individual', max_length=20, null=True)),
                ('usage', models.CharField(choices=[('Business', 'Business'), ('Residental', 'Residental')], default='Residental', max_length=20, null=True)),
                ('connectiontype', models.CharField(choices=[('POSTPAID', 'POSTPAID'), ('PREPAID', 'PREPAID')], default='POSTPAID', max_length=20, null=True)),
                ('communicationmethod', models.CharField(choices=[('Mobile', 'Mobile'), ('Email', 'Email')], default='Email', max_length=20, null=True)),
                ('accsubtype', models.CharField(max_length=100, null=True)),
                ('frequency', models.CharField(choices=[('Monthly', 'Monthly'), ('Bimonthly', 'Bimonthly')], default='Monthly', max_length=30, null=True)),
                ('billmedia', models.CharField(choices=[('EMAIL', 'EMAIL'), ('PAPER AND EMAIL', 'PAPER AND EMAIL'), ('Print Bill On Paper', 'Print Bill On Paper')], default='EMAIL', max_length=20, null=True)),
                ('poi', models.CharField(choices=[('Ration Card with Photo', 'Ration Card with Photo'), ('Passport', 'Passport'), ('Certificate Issued By MLA MP GR A Officer', 'Certificate Issued By MLA MP GR A Officer'), ('Goverment ID Card', 'Goverment ID Card'), ('Photo ID Card by Edu Institute', 'Photo ID Card by Edu Institute'), ('Photo ID by Village Panchayath', 'Photo ID by Village Panchayath'), ('CGHS/EGHS Card', 'CGHS/EGHS Card'), ('Voter ID Card', 'Voter ID Card'), ('Driving Licence', 'Driving Licence'), ('Pass Book Of Bank or PO', 'Pass Book Of Bank or PO'), ('PAN Card', 'PAN Card'), ('Unique Indentificationby Authority Of India', 'Unique Indentificationby Authority Of India'), ('Smart Card by CSD Defence', 'Smart Card by CSD Defence')], max_length=50, null=True)),
                ('poitype', models.CharField(max_length=100, null=True)),
                ('poiref', models.CharField(max_length=100, null=True)),
                ('poiby', models.CharField(choices=[('Village Panchayath', 'Village Panchayath'), ('Bank Branch Manager or PO', 'Pass Book Of Bank or PO'), ('Issued By MLA MP GR A Officer', 'Issued By MLA MP GR A Officer'), ('Income Tax Department', 'Income Tax Department'), ('RTO', 'RTO'), ('UIDAI Government Of India', 'UIDAI Government Of India'), ('Government of India', 'Government of India'), ('ERO', 'ERO'), ('The Central Govt Health Department', 'The Central Govt Health Department'), ('Ministry Of Defence', 'Ministry Of Defence'), ('Passport Authority', 'Passport Authority')], max_length=100, null=True)),
                ('poidate', models.DateTimeField(blank=True, null=True)),
                ('poa', models.CharField(choices=[('Ration Card with Photo', 'Ration Card with Photo'), ('Passport', 'Passport'), ('Certificate Issued By MLA MP GR A Officer', 'Certificate Issued By MLA MP GR A Officer'), ('Goverment ID Card', 'Goverment ID Card'), ('Photo ID Card by Edu Institute', 'Photo ID Card by Edu Institute'), ('Photo ID by Village Panchayath', 'Photo ID by Village Panchayath'), ('CGHS/EGHS Card', 'CGHS/EGHS Card'), ('Voter ID Card', 'Voter ID Card'), ('Driving Licence', 'Driving Licence'), ('Pass Book Of Bank or PO', 'Pass Book Of Bank or PO'), ('PAN Card', 'PAN Card'), ('Unique Indentificationby Authority Of India', 'Unique Indentificationby Authority Of India'), ('Smart Card by CSD Defence', 'Smart Card by CSD Defence')], max_length=50, null=True)),
                ('poatype', models.CharField(max_length=100, null=True)),
                ('poaref', models.CharField(max_length=100, null=True)),
                ('poaby', models.CharField(choices=[('Village Panchayath', 'Village Panchayath'), ('Bank Branch Manager or PO', 'Pass Book Of Bank or PO'), ('Issued By MLA MP GR A Officer', 'Issued By MLA MP GR A Officer'), ('Income Tax Department', 'Income Tax Department'), ('RTO', 'RTO'), ('UIDAI Government Of India', 'UIDAI Government Of India'), ('Government of India', 'Government of India'), ('ERO', 'ERO'), ('The Central Govt Health Department', 'The Central Govt Health Department'), ('Ministry Of Defence', 'Ministry Of Defence'), ('Passport Authority', 'Passport Authority')], max_length=100, null=True)),
                ('poadate', models.DateTimeField(blank=True, null=True)),
                ('billemail', models.CharField(max_length=20, null=True)),
                ('uesrname', models.CharField(blank=True, max_length=200, null=True)),
                ('mobileno', models.CharField(default='123', max_length=20, null=True)),
                ('mobileno1', models.CharField(blank=True, max_length=20, null=True)),
                ('pincode', models.CharField(max_length=20, null=True)),
                ('houseno', models.CharField(max_length=100, null=True)),
                ('village', models.CharField(max_length=100, null=True)),
                ('landmark', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(default='Pune', max_length=100)),
                ('district', models.CharField(default='Pune', max_length=100)),
                ('locaility', models.CharField(default='Pune', max_length=100)),
                ('sublocaility', models.CharField(default='Pune', max_length=100)),
                ('exchangecode', models.CharField(default='Pune', max_length=100)),
                ('ccategory', models.CharField(choices=[('Urban', 'Urban'), ('Rural', 'Rural')], default='Urban', max_length=100)),
                ('state', models.CharField(default='Maharashtra', max_length=100)),
                ('gstin', models.CharField(default='27', max_length=15)),
                ('bpincode', models.CharField(blank=True, max_length=20, null=True)),
                ('bhouseno', models.CharField(blank=True, max_length=100, null=True)),
                ('bvillage', models.CharField(blank=True, max_length=100, null=True)),
                ('blandmark', models.CharField(blank=True, max_length=100, null=True)),
                ('bcity', models.CharField(blank=True, default='Pune', max_length=100)),
                ('baddress', models.CharField(blank=True, default='Pune', max_length=500)),
                ('bdistrict', models.CharField(blank=True, default='Pune', max_length=100)),
                ('blocaility', models.CharField(blank=True, default='Pune', max_length=100)),
                ('bsublocaility', models.CharField(blank=True, default='Pune', max_length=100)),
                ('bexchangecode', models.CharField(blank=True, default='Pune', max_length=100)),
                ('bccategory', models.CharField(choices=[('Urban', 'Urban'), ('Rural', 'Rural')], default='Urban', max_length=100)),
                ('bstate', models.CharField(default='Maharashtra', max_length=100)),
                ('bgstin', models.CharField(default='27', max_length=15)),
                ('email', models.EmailField(max_length=60)),
                ('billaccno', models.CharField(choices=[('Existing', 'Existing'), ('New', 'New')], default='New', max_length=20)),
                ('adharcardno', models.CharField(blank=True, default='1', max_length=20, null=True)),
                ('adharcard', models.ImageField(default='profile1.png', upload_to='pics')),
                ('panno', models.CharField(blank=True, default='1', max_length=20, null=True)),
                ('pan', models.ImageField(default='profile1.png', upload_to='pics')),
                ('drivinglicenceno', models.CharField(blank=True, default='1', max_length=20, null=True)),
                ('drivinglicence', models.ImageField(default='profile1.png', upload_to='pics')),
                ('electricityno', models.CharField(blank=True, default='1', max_length=20)),
                ('electricitybill', models.ImageField(default='profile1.png', upload_to='pics')),
                ('active', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('profile_id', models.IntegerField(null=True)),
                ('accounttype', models.CharField(choices=[('Service', 'Service'), ('BB Over Wifi', 'BB Over Wifi'), ('MMVC PostPaid', 'MMVC PostPaid'), ('Retired BSNL Employee', 'Retired BSNL Employee'), ('VPT', 'VPT'), ('Public Utilities', 'Public Utilities'), ('State Government', 'State Government'), ('Foreign Embassy', 'Foreign Embassy'), ('PT', 'PT'), ('Individual', 'Individual'), ('Central Government', 'Central Government'), ('Bharat Air Fibre', 'Bharat Air Fibre'), ('Pubic Institution', 'Pubic Institution')], default='Service', max_length=100)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newcomplain1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=60)),
                ('accountno', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('Slow Speed', 'Slow Speed'), ('Relocation', 'Relocation'), ('No Connection', 'No Connection'), ('Billing Complant', 'Billing Complant')], max_length=200, null=True)),
                ('subject', models.CharField(choices=[('WEBSITE NOT OPENING', 'WEBSITE NOT OPENING'), ('PAYMENT PROBLEM', 'PAYMENT PROBLEM'), ('PASSWORD FORGOT', 'PASSWORD FORGOT'), ('BILL DISPUTE', 'BILL DISPUTE'), ('PAYMENT NOT UPDATED', 'PAYMENT NOT UPDATED'), ('SLOW SPEED TEST', 'SLOW SPEED TEST'), ('CABLE CUT', 'CABLE CUT'), ('UNABLE TO BROWSE', 'UNABLE TO BROWSE'), ('FREQUENTLY DISCONNECT', 'FREQUENTLY DISCONNECT'), ('ROUTER SUPPORT', 'ROUTER SUPPORT'), ('EQUIPEMENT PROBLEM', 'EQUIPEMENT PROBLEM')], max_length=200, null=True)),
                ('note', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('VISIT', 'VISIT'), ('OBSERVATION', 'OBSERVATION'), ('SOLVED', 'SOLVED'), ('N.A.', 'N.A.')], default='PENDING', max_length=200, null=True)),
                ('date_solved', models.DateTimeField(auto_now=True, null=True)),
                ('comments', models.TextField(null=True)),
                ('user1', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Newcomplain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=60)),
                ('accountno', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('Slow Speed', 'Slow Speed'), ('Relocation', 'Relocation'), ('No Connection', 'No Connection'), ('Billing Complant', 'Billing Complant')], max_length=200, null=True)),
                ('subject', models.CharField(choices=[('WEBSITE NOT OPENING', 'WEBSITE NOT OPENING'), ('PAYMENT PROBLEM', 'PAYMENT PROBLEM'), ('PASSWORD FORGOT', 'PASSWORD FORGOT'), ('BILL DISPUTE', 'BILL DISPUTE'), ('PAYMENT NOT UPDATED', 'PAYMENT NOT UPDATED'), ('SLOW SPEED TEST', 'SLOW SPEED TEST'), ('CABLE CUT', 'CABLE CUT'), ('UNABLE TO BROWSE', 'UNABLE TO BROWSE'), ('FREQUENTLY DISCONNECT', 'FREQUENTLY DISCONNECT'), ('ROUTER SUPPORT', 'ROUTER SUPPORT'), ('EQUIPEMENT PROBLEM', 'EQUIPEMENT PROBLEM')], max_length=200, null=True)),
                ('note', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('INPROGESS', 'INPROGRESS'), ('RESOLVED', 'RESOLVED'), ('OPEN', 'OPEN')], default='OPEN', max_length=200, null=True)),
                ('date_solved', models.DateTimeField(auto_now=True, null=True)),
                ('comments', models.TextField(null=True)),
                ('user1', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Myorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('Progress', 'Progress'), ('Pending', 'Pending'), ('Out for delivery', 'Out for delivery'), ('Installed', 'Installed')], max_length=200, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Newcustomer')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='travello.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='Installation2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flatno', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('voip', models.CharField(blank=True, max_length=200, null=True)),
                ('userid', models.CharField(blank=True, max_length=100, null=True)),
                ('ca', models.CharField(blank=True, max_length=100, null=True)),
                ('ba', models.CharField(blank=True, max_length=100, null=True)),
                ('ontmacid', models.CharField(blank=True, max_length=100, null=True)),
                ('router', models.CharField(blank=True, max_length=100, null=True)),
                ('dateapproval', models.DateTimeField(blank=True, null=True)),
                ('dateococ', models.DateTimeField(blank=True, null=True)),
                ('dateinstalled', models.DateTimeField(blank=True, null=True)),
                ('datepayment', models.DateTimeField(blank=True, null=True)),
                ('datewo', models.DateTimeField(blank=True, null=True)),
                ('rno', models.CharField(blank=True, max_length=100, null=True)),
                ('mode', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cablingby', models.CharField(blank=True, max_length=100, null=True)),
                ('cablingdate', models.DateTimeField(blank=True, null=True)),
                ('visitby', models.CharField(blank=True, max_length=100, null=True)),
                ('visitdate', models.DateTimeField(blank=True, null=True)),
                ('feedbackdate', models.DateTimeField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=100, null=True)),
                ('marketing', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Feasable')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Newcustomer')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='Installation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flatno', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('voip', models.CharField(blank=True, max_length=200, null=True)),
                ('userid', models.CharField(blank=True, max_length=100, null=True)),
                ('ca', models.CharField(blank=True, max_length=100, null=True)),
                ('ba', models.CharField(blank=True, max_length=100, null=True)),
                ('ontmacid', models.CharField(blank=True, max_length=100, null=True)),
                ('router', models.CharField(blank=True, max_length=100, null=True)),
                ('dateapproval', models.DateTimeField(blank=True, null=True)),
                ('timeapproval', models.TimeField(blank=True, null=True)),
                ('dateococ', models.DateTimeField(blank=True, null=True)),
                ('dateinstalled', models.DateTimeField(blank=True, null=True)),
                ('timeinstalled', models.TimeField(blank=True, null=True)),
                ('datepayment', models.DateTimeField(blank=True, null=True)),
                ('datewo', models.DateTimeField(blank=True, null=True)),
                ('rno', models.CharField(blank=True, max_length=100, null=True)),
                ('mode', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('cablingby', models.CharField(blank=True, max_length=100, null=True)),
                ('cablingdate', models.DateTimeField(blank=True, null=True)),
                ('visitby', models.CharField(blank=True, max_length=100, null=True)),
                ('visitdate', models.DateTimeField(blank=True, null=True)),
                ('feedbackdate', models.DateTimeField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=100, null=True)),
                ('marketing', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('building', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Feasable')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Newcustomer')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='travello.Plan')),
            ],
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=25)),
                ('email', models.CharField(max_length=25)),
                ('accountno', models.CharField(max_length=25)),
                ('category', models.CharField(max_length=200, null=True)),
                ('subject', models.CharField(max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(max_length=200, null=True)),
                ('date_solved', models.DateTimeField(auto_now_add=True, null=True)),
                ('note', models.TextField()),
                ('user1', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
